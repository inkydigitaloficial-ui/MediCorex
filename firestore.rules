
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Funções de Utilidade ---
    function isTenantOwner(tenantId) {
      return request.auth.token.tenants[tenantId] == 'owner';
    }

    function isTenantMember(tenantId) {
      return tenantId in request.auth.token.tenants;
    }

    // --- Regras por Coleção ---

    // Coleção principal de Tenants
    match /tenants/{tenantId} {
      allow read: if isTenantMember(tenantId);
      // Apenas o dono pode atualizar campos específicos do tenant.
      allow update: if isTenantOwner(tenantId)
                    && request.resource.data.diff(resource.data).affectedKeys()
                       .hasOnly(['name', 'settings', 'updatedAt', 'subscriptionStatus', 'stripeSubscriptionId', 'stripeCustomerId', 'trialEnds']);
      // Criação e exclusão de tenants devem ser feitas apenas pelo backend.
      allow create, delete: if false;

      // --- Subcoleções do Tenant ---

      // Pacientes
      match /pacientes/{pacienteId} {
        allow read, create, update: if isTenantMember(tenantId);
        allow delete: if isTenantOwner(tenantId);
      }

      // Agenda de compromissos
      match /agenda/{eventId} {
        // Qualquer membro pode ler e escrever na agenda.
        allow read, write: if isTenantMember(tenantId);
      }

      // Registros financeiros
      match /financeiro/{transactionId} {
        allow read: if isTenantMember(tenantId);
        // Apenas o dono pode criar, editar ou apagar registros financeiros.
        allow write: if isTenantOwner(tenantId);
      }

      // Histórico de gerações da IA
      match /ai_generations/{generationId} {
        // Apenas membros podem ler o histórico.
        allow read: if isTenantMember(tenantId);
        // A escrita é bloqueada para o cliente, deve ser feita apenas pelo backend (Genkit Flow).
        allow write: if false;
      }
    }

    // Coleção que mapeia usuários a tenants (se usada no futuro para convites, etc.)
    match /tenant_users/{userId} {
      allow read: if request.auth.uid == userId;
      allow write: if false; // Gerenciado apenas pelo backend.
    }

    // Coleção de perfis de usuário
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create, delete: if false; // Gerenciado pelo backend na criação da conta.
    }
  }
}
